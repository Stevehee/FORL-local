{"ast":null,"code":"var _jsxFileName = \"/Users/hechengxin/Desktop/FORL-local/src/main/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Upload } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [param1, setParam1] = useState('');\n  const [param2, setParam2] = useState('');\n  const [param3, setParam3] = useState('');\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [additionalParams, setAdditionalParams] = useState('');\n  const [tableData, setTableData] = useState({\n    headers: [],\n    data: []\n  });\n  const [numOfRules, setNumOfRules] = useState('');\n  const parseFile = async file => {\n    const content = await file.text();\n    const rows = content.split('\\n').filter(row => row).slice(0, 10); // slice(0, 10) to get only the top 10 rows\n    const headers = rows[0].split(','); // Assuming CSV format\n    const data = rows.slice(1).map(row => row.split(','));\n    setTableData({\n      headers,\n      data\n    });\n  };\n  const handleFileChange = file => {\n    setFile(file);\n    parseFile(file).then(() => {\n      console.log(\"file uploaded\");\n    });\n  };\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Parsing the additionalParams to append to the URL\n    const paramsArray = additionalParams.split(',').filter(p => p.trim() !== '').map(p => `args=${p.trim()}`);\n    const allParams = [`args=${param1}`, `args=${param2}`, ...paramsArray, `args=${param3}`, `args=${numOfRules}`].filter(Boolean); // This will remove any falsey values, just in case any parameter is undefined or empty\n\n    const url = `https://first-order-rule-learning-b2b4720fffc6.herokuapp.com/upload?${allParams.join('&')}`;\n    try {\n      const res = await fetch(url, {\n        method: 'POST',\n        body: formData\n      });\n      const result = await res.text();\n      setResponse(result);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setResponse('Error uploading file: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  function DataTable({\n    headers,\n    data\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 53\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 55\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n  const normFile = e => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e === null || e === void 0 ? void 0 : e.fileList;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: \"First-order Rule Learner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"introduction-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to the First-Order Rule Learner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This tool utilizes the FOIL (First-Order Inductive Learner) algorithm to derive first-order rules in the form of Horn clauses from relational datasets. Please note that the current version is optimized for categorical data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          span: 10\n        },\n        layout: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Upload\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: normFile,\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            beforeUpload: file => {\n              handleFileChange(file);\n              return false;\n            },\n            multiple: \"false\",\n            maxCount: 1,\n            listType: \"picture-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Target Literal\",\n          onChange: e => setParam1(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Num of args\",\n          onChange: e => setParam2(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Arguments\",\n          onChange: e => setAdditionalParams(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Rule Size\",\n          onChange: e => setParam3(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Num of Rules\",\n          onChange: e => setNumOfRules(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Submit\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            loading: isLoading,\n            onClick: handleSubmit,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intro-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"DataSet:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), \" Upload your relational data in a .csv format. After successful upload, the first 10 rows of your dataset will be showcased in the DataSet section below.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Target Literal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), \" Specify the target literal you aim to predict. It typically represents a column in your dataset and serves as the positive literal in a Horn Clause.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Num of Args:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), \" Indicate the number of arguments for your target literal. For instance, isGreater(X) contains a single argument, while \", /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Education(X, Bachelors)\"\n            }, void 0, false), \" contains two.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Arguments:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), \" Provide any additional arguments you'd like to set for the target literal. For example, if the target literal is \", /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Education(X, Bachelors)\"\n            }, void 0, false), \", input 'Bachelors' in this field.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Rule Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), \" Define the number of (negative) literals in the first order rule you wish to learn\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Num of Rules:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), \" Set the upper limit for the number of rules you'd like the algorithm to generate.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"After setting your preferences, proceed to initiate the learning process. Learned rules will be displayed in the bottom section with their empirical probability. (Larger dataset like Adult.csv might take a while to finish if you wish to learn multiple rules)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here are some available DataSet you can use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://drive.google.com/file/d/103Lh1MC24oDpLSuIVow3BewFPRXN4OxU/view?usp=sharing\",\n                children: \"Adult.csv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 38\n              }, this), \" (Target Literal: isGreater, Num of Args: 1, Arguments: (empty)) \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), \"Predict whether income exceeds $50K/yr based on census data. Also known as \\\"Census Income\\\" dataset.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://drive.google.com/file/d/1DISTIC0lIXsjjvWBXk9gN7K-7ur89Ot1/view?usp=sharing\",\n                children: \"Car.csv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), \"Used to predict the quality of a Car. Find more info \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://archive.ics.uci.edu/dataset/19/car+evaluation\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 82\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://drive.google.com/file/d/11tGaRIkIT1IxB56C1TVLcXaxiJUetOEa/view?usp=sharing\",\n                children: \"House.csv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), \"1984 United Stated Congressional Voting Records; Classify as Republican or Democrat. Find more info \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://archive.ics.uci.edu/dataset/105/congressional+voting+records\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 129\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://drive.google.com/file/d/1H7lwSgg3siikVKcbWALGRi59TaCheQje/view?usp=sharing\",\n                children: \"Mushroom.csv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), \"From Audobon Society Field Guide; mushrooms described in terms of physical characteristics; classification: poisonous or edible. Find more info \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://archive.ics.uci.edu/dataset/73/mushroom\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 173\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Dataset (displaying first ten rows):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), tableData.data && tableData.headers && /*#__PURE__*/_jsxDEV(DataTable, {\n        headers: tableData.headers,\n        data: tableData.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Rules Learned:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-box\",\n        children: response.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response-line\",\n          children: line.includes(':') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"confidence-value\",\n              children: line.split(':')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rule\",\n              children: line.split(':')[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"yYB2vAAKANq6T4X2Z6NwYRzUDJo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PlusOutlined","UploadOutlined","Button","Form","Input","Upload","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","param1","setParam1","param2","setParam2","param3","setParam3","response","setResponse","isLoading","setIsLoading","additionalParams","setAdditionalParams","tableData","setTableData","headers","data","numOfRules","setNumOfRules","parseFile","content","text","rows","split","filter","row","slice","map","handleFileChange","then","console","log","handleSubmit","formData","FormData","append","paramsArray","p","trim","allParams","Boolean","url","join","res","fetch","method","body","result","error","message","DataTable","children","header","index","fileName","_jsxFileName","lineNumber","columnNumber","rowIndex","cell","cellIndex","normFile","e","Array","isArray","fileList","className","labelCol","span","wrapperCol","layout","Item","label","valuePropName","getValueFromEvent","beforeUpload","multiple","maxCount","listType","style","marginTop","onChange","target","value","type","loading","onClick","href","line","includes","_c","$RefreshReg$"],"sources":["/Users/hechengxin/Desktop/FORL-local/src/main/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {PlusOutlined, UploadOutlined} from '@ant-design/icons';\n\nimport {\n    Button,\n    Form,\n    Input,\n    Upload,\n} from 'antd';\n\n\nfunction App() {\n    const [file, setFile] = useState(null);\n    const [param1, setParam1] = useState('');\n    const [param2, setParam2] = useState('');\n    const [param3, setParam3] = useState('');\n    const [response, setResponse] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [additionalParams, setAdditionalParams] = useState('');\n    const [tableData, setTableData] = useState({ headers: [], data: [] });\n    const [numOfRules, setNumOfRules] = useState('');\n\n\n\n\n    const parseFile =  async (file) => {\n        const content = await file.text();\n        const rows = content.split('\\n').filter(row => row).slice(0, 10); // slice(0, 10) to get only the top 10 rows\n        const headers = rows[0].split(','); // Assuming CSV format\n        const data = rows.slice(1).map(row => row.split(','));\n\n        setTableData({ headers, data });\n    };\n\n\n\n    const handleFileChange = (file) => {\n        setFile(file);\n        parseFile(file).then(()=>{console.log(\"file uploaded\")});\n    };\n\n    const handleSubmit = async () => {\n        setIsLoading(true);\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        // Parsing the additionalParams to append to the URL\n        const paramsArray = additionalParams.split(',')\n            .filter(p => p.trim() !== '')\n            .map(p => `args=${p.trim()}`);\n\n        const allParams = [\n            `args=${param1}`,\n            `args=${param2}`,\n            ...paramsArray,\n            `args=${param3}`,\n            `args=${numOfRules}`\n        ].filter(Boolean); // This will remove any falsey values, just in case any parameter is undefined or empty\n\n        const url = `https://first-order-rule-learning-b2b4720fffc6.herokuapp.com/upload?${allParams.join('&')}`;\n\n        try {\n            const res = await fetch(url, {\n                method: 'POST',\n                body: formData,\n            });\n\n            const result = await res.text();\n            setResponse(result);\n        } catch (error) {\n            console.error('Error uploading file:', error);\n            setResponse('Error uploading file: ' + error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    function DataTable({ headers, data }) {\n        return (\n            <table>\n                <thead>\n                <tr>\n                    {headers.map((header, index) => <th key={index}>{header}</th>)}\n                </tr>\n                </thead>\n                <tbody>\n                {data.map((row, rowIndex) => (\n                    <tr key={rowIndex}>\n                        {row.map((cell, cellIndex) => <td key={cellIndex}>{cell}</td>)}\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        );\n    }\n\n    const normFile = (e) => {\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e?.fileList;\n    };\n\n\n    return (\n        <div className=\"app-container\">\n            <header className=\"app-header\">\n                First-order Rule Learner\n            </header>\n\n            <div className=\"introduction-box\">\n                <h2>Welcome to the First-Order Rule Learner</h2>\n                <p>This tool utilizes the FOIL (First-Order Inductive Learner) algorithm to derive first-order rules in the form of Horn clauses from relational datasets. Please note that the current version is optimized for categorical data.</p>\n            </div>\n\n            <div className=\"App\">\n                <Form\n                    labelCol={{ span: 4 }}\n                    wrapperCol={{ span: 10 }}\n                    layout=\"horizontal\"\n                >\n                    <Form.Item label=\"Upload\" valuePropName=\"fileList\" getValueFromEvent={normFile}>\n                        <Upload beforeUpload={(file) => {\n                                handleFileChange((file)) ;\n                                return false} }\n                                multiple=\"false\"\n                                maxCount={1}\n                                listType=\"picture-card\"\n                        >\n                            <div>\n                                <PlusOutlined />\n                                <div style={{ marginTop: 8 }}>Upload</div>\n                            </div>\n                        </Upload>\n                    </Form.Item>\n\n                    <Form.Item label=\"Target Literal\"\n                               onChange={(e) => setParam1(e.target.value)}>\n                        <Input />\n                    </Form.Item>\n\n\n                    <Form.Item label=\"Num of args\"\n                               onChange={(e) => setParam2(e.target.value)}>\n                        <Input />\n                    </Form.Item>\n\n\n                    <Form.Item label=\"Arguments\"\n                               onChange={(e) => setAdditionalParams(e.target.value)}>\n                        <Input />\n                    </Form.Item>\n\n\n                    <Form.Item label=\"Rule Size\"\n                               onChange={(e) => setParam3(e.target.value)}>\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item label=\"Num of Rules\"\n                               onChange={(e) => setNumOfRules(e.target.value)}>\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item label=\"Submit\">\n                        <Button\n                            type=\"primary\"\n                            loading={isLoading}\n                            onClick={handleSubmit}>\n                            Upload\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n\n                <div className=\"intro-section\">\n                    <h3>How to Use</h3>\n                    <ol>\n                        <li>\n                            <strong>DataSet:</strong> Upload your relational data in a .csv format. After successful upload, the first 10 rows of your dataset will be showcased in the DataSet section below.\n                        </li>\n                        <li>\n                            <strong>Target Literal:</strong> Specify the target literal you aim to predict. It typically represents a column in your dataset and serves as the positive literal in a Horn Clause.\n                        </li>\n                        <li>\n                            <strong>Num of Args:</strong> Indicate the number of arguments for your target literal. For instance, isGreater(X) contains a single argument, while <>Education(X, Bachelors)</> contains two.\n                        </li>\n                        <li>\n                            <strong>Arguments:</strong> Provide any additional arguments you'd like to set for the target literal. For example, if the target literal is <>Education(X, Bachelors)</>, input 'Bachelors' in this field.\n                        </li>\n                        <li>\n                            <strong>Rule Size:</strong> Define the number of (negative) literals in the first order rule you wish to learn\n                        </li>\n                        <li>\n                            <strong>Num of Rules:</strong> Set the upper limit for the number of rules you'd like the algorithm to generate.\n                        </li>\n                    </ol>\n                    <p>After setting your preferences, proceed to initiate the learning process. Learned rules will be displayed in the bottom section with their empirical probability. (Larger dataset like Adult.csv might take a while to finish if you wish to learn multiple rules)</p>\n\n                    <p>Here are some available DataSet you can use:</p>\n\n                    <ol>\n                        <li>\n                            <strong> <a href=\"https://drive.google.com/file/d/103Lh1MC24oDpLSuIVow3BewFPRXN4OxU/view?usp=sharing\">Adult.csv</a> (Target Literal: isGreater, Num of Args: 1, Arguments: (empty)) </strong>\n                            Predict whether income exceeds $50K/yr based on census data. Also known as \"Census Income\" dataset.\n\n                        </li>\n                        <li>\n                            <strong><a href=\"https://drive.google.com/file/d/1DISTIC0lIXsjjvWBXk9gN7K-7ur89Ot1/view?usp=sharing\">Car.csv</a> </strong>\n                            Used to predict the quality of a Car. Find more info <a href=\"https://archive.ics.uci.edu/dataset/19/car+evaluation\">here</a>\n                        </li>\n                        <li>\n                            <strong><a href=\"https://drive.google.com/file/d/11tGaRIkIT1IxB56C1TVLcXaxiJUetOEa/view?usp=sharing\">House.csv</a> </strong>\n                            1984 United Stated Congressional Voting Records; Classify as Republican or Democrat. Find more info <a href=\"https://archive.ics.uci.edu/dataset/105/congressional+voting+records\">here</a>\n                        </li>\n                        <li>\n                            <strong><a href=\"https://drive.google.com/file/d/1H7lwSgg3siikVKcbWALGRi59TaCheQje/view?usp=sharing\">Mushroom.csv</a> </strong>\n                            From Audobon Society Field Guide; mushrooms described in terms of physical characteristics; classification: poisonous or edible. Find more info <a href=\"https://archive.ics.uci.edu/dataset/73/mushroom\">here</a>\n                        </li>\n                    </ol>\n\n                </div>\n\n            </div>\n\n            <div className=\"data-section\">\n                <strong>Dataset (displaying first ten rows):</strong>\n                {tableData.data && tableData.headers && <DataTable headers={tableData.headers} data={tableData.data} />}\n            </div>\n\n\n            <div className=\"response-container\">\n                <strong>Rules Learned:</strong>\n                <div className=\"response-box\">\n                    {response.split('\\n').map((line, index) => (\n                        <div className=\"response-line\" key={index}>\n                            {line.includes(':') ? (\n                                <>\n                                <span className=\"confidence-value\">\n                                    {line.split(':')[0]}\n                                </span>\n                                    <span className=\"rule\">\n                                    {line.split(':')[1]}\n                                </span>\n                                </>\n                            ) : (\n                                line\n                            )}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}